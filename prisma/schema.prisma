// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
 provider = "prisma-client-js"
}

datasource db {
 provider  = "postgresql"
 url       = env("DATABASE_URL")
 directUrl = env("DIRECT_URL")
}

model User {
 id            String     @id @default(cuid())
 name          String?
 username      String?    @unique @db.VarChar(30)
 handle        String?    @db.VarChar(30)
 email         String?    @unique
 emailVerified DateTime?
 image         String?
 password      String?
 createdAt     DateTime   @default(now())
 updatedAt     DateTime   @updatedAt
 accounts      Account[]
 tweets        Tweet[]
 likes         Like[]
 Media         Media[]
 bookmarks     Bookmark[]
}

model Account {
 id                String  @id @default(cuid())
 userId            String
 type              String
 provider          String
 providerAccountId String
 refresh_token     String? @db.Text
 access_token      String? @db.Text
 expires_at        Int?
 token_type        String?
 scope             String?
 id_token          String? @db.Text
 session_state     String?
 user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

 @@unique([provider, providerAccountId])
}

model Tweet {
 id        String     @id @default(cuid())
 text      String?    @db.VarChar(300)
 createdAt DateTime   @default(now())
 updatedAt DateTime   @updatedAt
 reply     Boolean    @default(false)
 replyToId String?
 userId    String
 media     Media[]
 user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
 likes     Like[]
 bookmarks Bookmark[]
}

model Media {
 id          String @id @default(cuid())
 url         String
 tweetId     String
 userId      String
 width       String
 height      String
 aspectRatio String
 tweet       Tweet  @relation(fields: [tweetId], references: [id], onDelete: Cascade)
 user        User   @relation(fields: [userId], references: [id], onDelete: Cascade)

 @@unique([tweetId, userId, url])
}

model Like {
 id        String   @id @default(cuid())
 tweetId   String
 userId    String
 createdAt DateTime @default(now())
 tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
 user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

 @@unique([tweetId, userId])
}

model Bookmark {
 id        String   @id @default(cuid())
 tweetId   String
 userId    String
 createdAt DateTime @default(now())
 tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
 user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

 @@unique([tweetId, userId])
}
